rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Product images - public read, admin write
    match /products/{imageId} {
      allow read: if true;
      allow write: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // User uploads - authenticated users only
    match /users/{userId}/{allPaths=**} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // AI-generated content - public read/write (for testing, will secure with Cloud Functions later)
    match /content/{contentType}/{season}/{fileName} {
      allow read: if true; // Public read for displaying on website
      allow write: if true; // TODO: Secure with service account or Cloud Functions for production
    }

    // Temp uploads - open for testing
    match /content/temp/{fileName} {
      allow read, write: if true; // TODO: Secure for production
    }
  }
}
