name: Fast Pre-checks

on:
  pull_request:
    types: [opened, synchronize, ready_for_review, reopened]
    paths:
      - 'coffee-website-react/**'
      - 'apps/content-gen/frontend/**'
      - '.github/workflows/playwright.yml'
  workflow_dispatch:  # Allow manual triggering

jobs:
  fast-checks:
    # Don't run on draft PRs or dependabot
    if: |
      github.event.pull_request.draft == false &&
      github.event.pull_request.user.login != 'dependabot[bot]'

    timeout-minutes: 10  # Fast checks should be quick
    runs-on: ubuntu-latest

    strategy:
      matrix:
        app:
          - name: coffee-website-react
            path: coffee-website-react
            test_scripts: ['test:inventory', 'test:checkout', 'test:stripe']
          # Add more apps as needed
          # - name: content-gen-frontend
          #   path: apps/content-gen/frontend
          #   test_scripts: []

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 'lts/*'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.app.path }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ matrix.app.path }}
        run: npm ci

      - name: TypeScript type checking
        working-directory: ${{ matrix.app.path }}
        run: npx tsc --noEmit
        continue-on-error: true

      - name: Run linting
        working-directory: ${{ matrix.app.path }}
        run: npm run lint
        continue-on-error: true  # Don't block on lint warnings for test PR

      - name: Build verification
        working-directory: ${{ matrix.app.path }}
        run: npm run build
        env:
          # Use test environment variables
          NODE_ENV: test

      - name: Run unit test scripts (fast)
        working-directory: ${{ matrix.app.path }}
        run: |
          EXIT_CODE=0
          for script in ${{ join(matrix.app.test_scripts, ' ') }}; do
            echo "Running npm run $script..."
            if npm run $script; then
              echo "✅ $script passed"
            else
              echo "❌ $script failed"
              EXIT_CODE=1
            fi
          done
          exit $EXIT_CODE
        env:
          NODE_ENV: test

      - name: Upload build artifacts (for debugging)
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: build-output-${{ matrix.app.name }}
          path: ${{ matrix.app.path }}/dist/
          retention-days: 7

      - name: Comment PR with pre-check results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const pr_number = context.payload.pull_request.number;

            const body = `## ⚡ Fast Pre-checks for ${context.payload.pull_request.head.sha.substring(0, 7)}

            **Application:** \`${{ matrix.app.name }}\`

            ### Pre-check Summary

            - ✅ TypeScript type checking
            - ✅ Linting (ESLint)
            - ✅ Build verification
            - ✅ Unit test scripts

            [View full logs](https://github.com/${owner}/${repo}/actions/runs/${context.runId})

            **Next:** Waiting for Firebase preview deployment and E2E tests...

            ---
            <sub>Fast pre-checks completed</sub>
            `;

            github.rest.issues.createComment({
              owner,
              repo,
              issue_number: pr_number,
              body,
            });

  # Summary job
  check-summary:
    runs-on: ubuntu-latest
    needs: fast-checks
    if: always()

    steps:
      - name: Check results
        run: |
          if [ "${{ needs.fast-checks.result }}" == "failure" ]; then
            echo "❌ Pre-checks failed"
            exit 1
          elif [ "${{ needs.fast-checks.result }}" == "success" ]; then
            echo "✅ All pre-checks passed"
          else
            echo "⚠️ Pre-checks completed with warnings"
          fi
